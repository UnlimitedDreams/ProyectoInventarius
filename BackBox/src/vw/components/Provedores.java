/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vw.components;

import Control.Entrada;
import vw.main.Menu;
import Control.Control;
import java.net.URL;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vw.dialogs.ProveedoresActualizar;
import vw.dialogs.ProveedoresRegistrar;

/**
 *
 * @author Britany
 */
public class Provedores extends javax.swing.JFrame {

    /**
     * Creates new form Articulo
     */
    String nom;
    ArrayList<Integer> ListAcciones = new ArrayList();

    public Provedores(String nom, ArrayList acciones) throws ClassNotFoundException {
        initComponents();
        this.ListAcciones = acciones;
        inicio(1);
        this.nom = nom;
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        URL url = getClass().getResource("/images/facelet/icon.png");
        ImageIcon img = new ImageIcon(url);
        setIconImage(img.getImage());
        Permisos();
    }

    public void Permisos() throws ClassNotFoundException {
        Control.conectar();
        try {
            ArrayList<String> acciones = new ArrayList();
            Control.ejecuteQuery("select c.accion from usuario a, persona b , permisos c\n"
                    + "where\n"
                    + "a.cedula=b.cedula and \n"
                    + "a.cod_usuario=c.cod_usuario\n"
                    + "and c.panel='Proveedores'\n"
                    + "and a.cod_usuario=" + nom);
            while (Control.rs.next()) {
                acciones.add(Control.rs.getString(1));
            }
            nuevo.setEnabled(false);
            borrar.setEnabled(false);
            actualizar.setEnabled(false);

            String acci = "";
            for (String accione : acciones) {
                acci = (String) accione;
                if (acci.equalsIgnoreCase("ProCrear")) {
                    nuevo.setEnabled(true);
                } else if (acci.equalsIgnoreCase("ProEditar")) {
                    actualizar.setEnabled(true);
                } else if (acci.equalsIgnoreCase("ProBorrar")) {
                    borrar.setEnabled(true);
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(Bodega.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            Control.cerrarConexion();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        centro = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        superior = new javax.swing.JPanel();
        buscaUsu = new javax.swing.JTextField();
        inferior = new javax.swing.JPanel();
        infIzq = new javax.swing.JPanel();
        nuevo = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        infDer = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Proveedores - BackBox");
        setExtendedState(6);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        centro.setBackground(new java.awt.Color(255, 255, 255));
        centro.setLayout(new javax.swing.BoxLayout(centro, javax.swing.BoxLayout.LINE_AXIS));

        jTable1.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        centro.add(jScrollPane1);

        getContentPane().add(centro, java.awt.BorderLayout.CENTER);

        superior.setBackground(java.awt.Color.white);

        buscaUsu.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        buscaUsu.setMinimumSize(new java.awt.Dimension(700, 30));
        buscaUsu.setPreferredSize(new java.awt.Dimension(700, 30));
        buscaUsu.setSelectionColor(new java.awt.Color(51, 0, 255));
        buscaUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaUsuActionPerformed(evt);
            }
        });
        buscaUsu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscaUsuKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscaUsuKeyReleased(evt);
            }
        });
        superior.add(buscaUsu);

        getContentPane().add(superior, java.awt.BorderLayout.PAGE_START);

        inferior.setBackground(java.awt.Color.white);
        inferior.setLayout(new java.awt.GridLayout());

        infIzq.setBackground(java.awt.Color.white);
        infIzq.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        nuevo.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/drawable-mdpi/ic_add_black_24dp.png"))); // NOI18N
        nuevo.setText("Nuevo");
        nuevo.setBorder(null);
        nuevo.setBorderPainted(false);
        nuevo.setContentAreaFilled(false);
        nuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nuevo.setPreferredSize(new java.awt.Dimension(55, 47));
        nuevo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        nuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        infIzq.add(nuevo);

        borrar.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/drawable-mdpi/ic_delete_black_24dp.png"))); // NOI18N
        borrar.setText("Borrar");
        borrar.setBorder(null);
        borrar.setBorderPainted(false);
        borrar.setContentAreaFilled(false);
        borrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        borrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        borrar.setPreferredSize(new java.awt.Dimension(55, 47));
        borrar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        borrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });
        infIzq.add(borrar);

        actualizar.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/drawable-mdpi/ic_update_black_24dp.png"))); // NOI18N
        actualizar.setText("Actualizar");
        actualizar.setBorder(null);
        actualizar.setBorderPainted(false);
        actualizar.setContentAreaFilled(false);
        actualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        actualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        actualizar.setPreferredSize(new java.awt.Dimension(55, 47));
        actualizar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        actualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });
        infIzq.add(actualizar);

        inferior.add(infIzq);

        infDer.setBackground(java.awt.Color.white);
        infDer.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(160, 40));
        jSeparator1.setRequestFocusEnabled(false);
        infDer.add(jSeparator1);

        volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/drawable-xhdpi/ic_arrow_back_black_24dp.png"))); // NOI18N
        volver.setBorder(null);
        volver.setBorderPainted(false);
        volver.setContentAreaFilled(false);
        volver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        volver.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        volver.setPreferredSize(new java.awt.Dimension(55, 47));
        volver.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        volver.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        infDer.add(volver);

        inferior.add(infDer);

        getContentPane().add(inferior, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        new Menu(nom).setVisible(true);;
        this.dispose();
    }//GEN-LAST:event_volverActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed

        try {
            borrar();
            inicio(1);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_borrarActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        try {
            Update();
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        } finally {
            try {
                inicio(1);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Provedores.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_actualizarActionPerformed

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        try {
            new ProveedoresRegistrar(this, true).setVisible(true);
        } catch (Exception e) {
            System.out.println("Error" + e.toString());
        } finally {
            try {
                inicio(1);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Provedores.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

//        Registro_Provedor r;
//        try {
//            r = new Registro_Provedor(nom, ListAcciones);
//            this.dispose();
//            r.setVisible(true);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Provedores.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_nuevoActionPerformed

    private void buscaUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaUsuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaUsuActionPerformed

    private void buscaUsuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaUsuKeyPressed

    }//GEN-LAST:event_buscaUsuKeyPressed

    private void buscaUsuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaUsuKeyReleased
        try {
            inicio(2);
        } catch (Exception ex) {
            System.out.println("error " + ex.toString());
        }
    }//GEN-LAST:event_buscaUsuKeyReleased
    public void borrar() throws ClassNotFoundException {

        int i = jTable1.getSelectedRow();
        int j = jTable1.getSelectedColumn();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Favor... seleccione una fila");
        } else {
            String cod = (String) jTable1.getValueAt(i, 0).toString();
            String op[] = new String[2];
            op[0] = "Si";
            op[1] = "No";
            int Condicion = Entrada.menu("BackBox", "¿Esta Seguro que Desea Borrar el Provedor? ", op);
            if (Condicion == 1) {
                Control.conectar();
                boolean r = Control.ejecuteUpdate("update provedor set estado='I' where cod_provedor=" + cod);
                if (r) {
                    Entrada.muestreMensajeV("Se retiró el proveedor exitosamente",
                            javax.swing.JOptionPane.INFORMATION_MESSAGE);
                } else {
                    Entrada.muestreMensajeV("Error",
                            javax.swing.JOptionPane.ERROR_MESSAGE);
                }
                Control.cerrarConexion();
            }
        }
    }

    public void Update() throws ClassNotFoundException {
        Control.conectar();
        int i = jTable1.getSelectedRow();
        int j = jTable1.getSelectedColumn();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Favor... seleccione una fila");
        } else {
            String cod = (String) jTable1.getValueAt(i, 0).toString();
            new ProveedoresActualizar(this, true, cod).setVisible(true);
        }
    }

    public boolean SoloNumeros(String cadena) {
        try {
            Long.parseLong(cadena);
            return true;
        } catch (Exception ex) {
            return false;
        }
    }

    public void inicio(int condicion) throws ClassNotFoundException {
        Control.conectar();

        String query = "";
        if (condicion == 1) {
            query = "select "
                    + "cod_provedor \"Código\","
                    + "upper(empresa) \"Empresa\","
                    + "nit\"Nit Empresa\","
                    + "telefono \"Teléfono\","
                    + "direccion \"Dirección\" "
                    + "from provedor where estado='A'";
        } else if (condicion == 2) {
            if (SoloNumeros(buscaUsu.getText())) {
                query = "select distinct  * from (select "
                        + "cod_provedor \"Código\","
                        + "upper(empresa) \"Empresa\","
                        + "nit\"Nit Empresa\","
                        + "telefono \"Teléfono\","
                        + "direccion \"Dirección\" "
                        + "from provedor where "
                        + "nit ILIKE ('%" + buscaUsu.getText() + "') "
                        + "and estado='A' "
                        + "union all "
                        + "select "
                        + "cod_provedor \"Código\","
                        + "upper(empresa) \"Empresa\","
                        + "nit\"Nit Empresa\","
                        + "telefono \"Teléfono\","
                        + "direccion \"Dirección\" "
                        + "from provedor where "
                        + " nit ILIKE ('%" + buscaUsu.getText() + "%')"
                        + " and estado='A')Y";
            } else {
                query = "select "
                        + "cod_provedor \"Código\","
                        + "upper(empresa) \"Empresa\","
                        + "nit\"Nit Empresa\","
                        + "telefono \"Teléfono\","
                        + "direccion \"Dirección\" "
                        + "from provedor where "
                        + " empresa ILIKE ('%" + buscaUsu.getText() + "%')"
                        + "and estado='A'";
            }

        }
        System.out.println(query);
        String cod = "", nom = "", valor = "", cant = "", costo = "", iva = "", precio = "";
        String cate = "";
        DefaultTableModel modeloEmpleado = new DefaultTableModel();
        int numeroPreguntas;
        ResultSetMetaData rsetMetaData;
        this.jTable1.setModel(modeloEmpleado);
        try {
            boolean r = Control.ejecuteQuery(query);

            rsetMetaData = Control.rs.getMetaData();
            numeroPreguntas = rsetMetaData.getColumnCount();
            //Establece los nombres de las columnas de las tablas
            for (int i = 0; i < numeroPreguntas; i++) {
                modeloEmpleado.addColumn(rsetMetaData.getColumnLabel(i + 1));
            }

            while (Control.rs.next()) {
                cod = Control.rs.getString(1);
                nom = Control.rs.getString(2);
                costo = Control.rs.getString(3);
                valor = Control.rs.getString(4);
                cant = Control.rs.getString(5);

                Object[] registroEmpleado = new Object[numeroPreguntas];

                for (int i = 0; i < numeroPreguntas; i++) {
                    registroEmpleado[i] = Control.rs.getObject(i + 1);
                }
                modeloEmpleado.addRow(registroEmpleado);
            }
            Control.cerrarConexion();

//            Control.rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR " + e.getMessage());
        } finally {
            Control.cerrarConexion();
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton borrar;
    private javax.swing.JTextField buscaUsu;
    private javax.swing.JPanel centro;
    private javax.swing.JPanel infDer;
    private javax.swing.JPanel infIzq;
    private javax.swing.JPanel inferior;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton nuevo;
    private javax.swing.JPanel superior;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
